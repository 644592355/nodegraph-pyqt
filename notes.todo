Nodes:

  Design:
    * Undefined number of inputs
    * Single Output
    * Inputs are on left side of the node
    * Output is on the righ side of the node
    * Natural layout flow is left to right

  To do:
    ☐ Optimize redraw by caching as much as possible any computation
    ☐ Handle undefined numbers of inputs
    ☐ Create a disabled state

Edges:

  Design:
    * An edge is defined but its parent output and its named input
    * Edge name is hashed from its parents
    * A edge is only valid if it doesn't create a loop

  To do:
    ✔ Create edge interactively @done (17-10-04 09:01)
    ✔ Adjust arrow size (lod bug) and implement dynamic scale @done (17-10-04 09:06)
    ☐ Optimize redraw by caching as much as possible any computation
    ☐ Optimize redraw by updating line through callbacks

Nodegraph view:

  Design:
    * Zoom limits (no more than 1:1, no less than 1:10)

  To do:
    ✔ Limit fit all unzoom @done (17-10-05 08:53)
    ☐ Write a custom select rubber band (default one evaluate all nodes in scenes...)
    ☐ Add a node creation widget (tab)

Performances issues:

  * OpenGL viewport don't accept partial redraw, hence redraw has to happen on the whole viewport regardless of what need to be redrawn.
  * Using regular viewport allows for partial redraw but then edges are not redrawn well (most likely because of shape/bbox too tight and/or way of being updated)
  * Hierarchy of graphicsItem contained by a Node (NodeSlot, NodeSlotLabel) is forcing QT to multiply draw calls (3 instead of 1). KILLING rubber band selection refresh.
  * Knobs have to be set visible (or not) on every redraw.
