Nodes:

  Design:
    * Undefined number of inputs
    * Single Output
    * Inputs are on left side of the node
    * Output is on the righ side of the node
    * Natural layout flow is left to right

  To do:
    ☐ Optimize redraw by caching as much as possible any computation
    ☐ Handle undefined numbers of inputs
    ☐ Create a disabled state

Edges:

  Design:
    * An edge is defined but its parent output and its named input
    * Edge name is hashed from its parents
    * A edge is only valid if it doesn't create a loop

  To do:
    ✔ Create edge interactively @done (17-10-04 09:01)
    ✔ Adjust arrow size (lod bug) and implement dynamic scale @done (17-10-04 09:06)
    ☐ Optimize redraw by caching as much as possible any computation
    ☐ Optimize redraw by updating line through callbacks

Nodegraph view:

  Design:
    * Zoom limits (no more than 1:1, no less than 1:10)

  To do:
    ✔ Limit fit all unzoom @done (17-10-05 08:53)
    ☐ Write a custom select rubber band (default one evaluate all nodes in scenes...)
    ☐ Add a node creation widget (tab)

Performances issues is due to the fact the OpenGL doesn't accept partial redraw,
hence redraw has to happen on the whole viewport regardless of what need to be
redrawn.
Using regular viewport allows for partial redraw but then edges are not redrawn
well (most likely because of shape/bbox too tight and/or way of being updated)
Also, knob are relatively slow to select. Need to investigate.

Knob are slow to select because of NodeSlotLabel that has to be set visible on
every redraw....
Same for Node Slot..
